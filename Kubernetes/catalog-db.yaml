# Service Account
apiVersion: v1
kind: ServiceAccount
metadata:
  name: catalog-db-service-account

---
# ConfigMap
apiVersion: v1
kind: ConfigMap
metadata:
  name: catalog-db-config
data:
  MYSQL_DATABASE: "sampledb"         # Database name

---
# Secret
apiVersion: v1
kind: Secret
metadata:
  name: catalog-db-secret
type: Opaque
data:
  MYSQL_ROOT_PASSWORD: "cm9vdA=="
  MYSQL_USER: "Y2F0YWxvZ191c2Vy" 
  MYSQL_PASSWORD: "Y2F0YWxvZ19wYXNz"   # Base64-encoded secret value (e.g., "secret-value")

---
# StatefulSet
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: catalog-db
spec:
  serviceName: "catalog-db-service"
  replicas: 1
  selector:
    matchLabels:
      app: catalog-db
  template:
    metadata:
      labels:
        app: catalog-db
    spec:
      serviceAccountName: catalog-db-service-account
      containers:
        - name: catalog-db-container
          image: arsenet10/revive-catalog:db-01    # Replace with the actual database image
          ports:
            - containerPort: 3306              # Example port for MySQL, adjust as needed
          envFrom:
            - configMapRef:
                name: catalog-db-config
            - secretRef:
                name: catalog-db-secret
          volumeMounts:
            - name: catalog-db-storage
              mountPath: /var/lib/mysql        # Mount path for persistence
  volumeClaimTemplates:
    - metadata:
        name: catalog-db-storage
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 1Gi                     # Adjust storage size based on requirements

---
# Service (ClusterIP)
apiVersion: v1
kind: Service
metadata:
  name: catalog-db
spec:
  type: ClusterIP
  selector:
    app: catalog-db
  ports:
    - protocol: TCP
      port: 3306                # Database port (e.g., 5432 for PostgreSQL)
      targetPort: 3306
